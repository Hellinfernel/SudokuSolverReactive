<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_fork_join_test_8java" kind="file" language="Java">
    <compoundname>ForkJoinTest.java</compoundname>
    <innerclass refid="class_fork_join_test" prot="public">ForkJoinTest</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespace_fork_join_alternative" kindref="compound">ForkJoinAlternative</ref>.<ref refid="class_fork_join_alternative_1_1_core" kindref="compound">Core</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespace_fork_join_alternative" kindref="compound">ForkJoinAlternative</ref>.<ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.junit.jupiter.api.RepeatedTest;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Arrays;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>org.assertj.core.api.Assertions.assertThat;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_fork_join_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fork_join_test" kindref="compound">ForkJoinTest</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>@RepeatedTest(100)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forkJoinTest(){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[][]<sp/>intMatrix=<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,0,5,3,0,8,4,0,9},</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,7,0,0,0,0,0,5,0},</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{9,0,4,0,0,0,6,0,7},</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{5,0,0,0,4,0,0,0,2},</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,5,0,7,0,0,0},</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{6,0,0,0,3,0,0,0,8},</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{4,0,6,0,0,0,8,0,1},</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,2,0,0,0,0,0,6,0},</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{8,0,1,2,0,9,7,0,4}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_core" kindref="compound">ForkJoinAlternative.Core</ref><sp/>core<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_fork_join_alternative_1_1_core" kindref="compound">Core</ref>(intMatrix);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow1<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(1);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow2<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(2);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow3<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(3);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow4<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(4);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow5<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(5);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow6<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(6);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow7<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(7);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow8<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(8);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow9<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(9);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn1<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn2<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(2);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn3<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(3);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn4<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(4);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn5<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(5);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn6<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(6);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn7<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(7);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn8<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(8);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn9<sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1ab9dace98db771aa818a1ece6497141bf" kindref="member">getColumn</ref>(9);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock1<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock2<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(2);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock3<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(3);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock4<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(4);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock5<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(5);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock6<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(6);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock7<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(7);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock8<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(8);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fork_join_alternative_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock9<sp/><sp/>=<sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a75cd726b87f29f1493595fe6d8158ee4" kindref="member">getBlock</ref>(9);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow1.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,5,3,0,8,4,0,9);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow2.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,7,0,0,0,0,0,5,0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow3.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(9,0,4,0,0,0,6,0,7);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow4.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,0,0,4,0,0,0,2);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow5.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,5,0,7,0,0,0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow6.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(6,0,0,0,3,0,0,0,8);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow7.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,0,0,8,0,1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow8.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,2,0,0,0,0,0,6,0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow9.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,1,2,0,9,7,0,4);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn1.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,9,5,0,6,4,0,8);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn2.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,7,0,0,0,0,0,2,0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn3.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,4,0,0,0,6,0,1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn4.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(3,0,0,0,5,0,0,0,2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn5.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,4,0,3,0,0,0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn6.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,0,0,7,0,0,0,9);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn7.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,0,0,8,0,7);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn8.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,5,0,0,0,0,0,6,0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn9.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(9,0,7,2,0,8,1,0,4);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock1.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,5,0,7,0,9,0,4);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock2.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(3,0,8,0,0,0,0,0,0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock3.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,9,0,5,0,6,0,7);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock4.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,0,0,0,0,6,0,0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock5.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,4,0,5,0,7,0,3,0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock6.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,2,0,0,0,0,0,8);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock7.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,2,0,8,0,1);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock8.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,0,0,0,2,0,9);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock9.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,1,0,6,0,7,0,4);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core.<ref refid="class_fork_join_alternative_1_1_core_1a708b01feb34ecbe10037120adb3103e6" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(1).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(2).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(3).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(4).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(5).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(6).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(7).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(8).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_fork_join_alternative_1_1_core_1a152752ff930aca8bf74b06160ca40381" kindref="member">getRow</ref>(9).<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow1.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(2,<sp/>6,<sp/>5,<sp/>3,<sp/>7,<sp/>8,<sp/>4,<sp/>1,<sp/>9);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow2.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(1,<sp/>7,<sp/>8,<sp/>4,<sp/>9,<sp/>6,<sp/>2,<sp/>5,<sp/>3);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow3.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(9,<sp/>3,<sp/>4,<sp/>1,<sp/>2,<sp/>5,<sp/>6,<sp/>8,<sp/>7);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow4.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(5,<sp/>8,<sp/>9,<sp/>6,<sp/>4,<sp/>1,<sp/>3,<sp/>7,<sp/>2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow5.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(3,<sp/>4,<sp/>2,<sp/>5,<sp/>8,<sp/>7,<sp/>1,<sp/>9,<sp/>6);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow6.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(6,<sp/>1,<sp/>7,<sp/>9,<sp/>3,<sp/>2,<sp/>5,<sp/>4,<sp/>8);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow7.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(4,<sp/>9,<sp/>6,<sp/>7,<sp/>5,<sp/>3,<sp/>8,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow8.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(7,<sp/>2,<sp/>3,<sp/>8,<sp/>1,<sp/>4,<sp/>9,<sp/>6,<sp/>5);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow9.<ref refid="class_fork_join_alternative_1_1_number_group_1a9587c29445347757fd9798c7590766fc" kindref="member">getGroupAsArray</ref>()).containsExactly(8,<sp/>5,<sp/>1,<sp/>2,<sp/>6,<sp/>9,<sp/>7,<sp/>3,<sp/>4);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/test/java/ForkJoinTest.java"/>
  </compounddef>
</doxygen>
