<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_sudoku_test_8java" kind="file" language="Java">
    <compoundname>SudokuTest.java</compoundname>
    <innerclass refid="class_sudoku_test" prot="public">SudokuTest</innerclass>
    <innernamespace refid="namespaceorg_1_1assertj_1_1core_1_1api_1_1_assertions">org::assertj::core::api::Assertions</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespace_stuff" kindref="compound">Stuff</ref>.*;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespace_old" kindref="compound">Old</ref>.<ref refid="class_old_1_1_number_field" kindref="compound">NumberField</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacealternative" kindref="compound">alternative</ref>.<ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacealternative" kindref="compound">alternative</ref>.<ref refid="classalternative_1_1_field" kindref="compound">Field</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacealternative" kindref="compound">alternative</ref>.<ref refid="classalternative_1_1_static_field" kindref="compound">StaticField</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacealternative" kindref="compound">alternative</ref>.<ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.junit.jupiter.api.RepeatedTest;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>org.junit.jupiter.api.Test;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.ArrayList;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Arrays;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.Collection;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>java.util.HashSet;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>org.assertj.core.api.Assertions.*;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_sudoku_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/><sp/></highlight><highlight class="normal"><ref refid="class_sudoku_test" kindref="compound">SudokuTest</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>numberFieldInitTest(){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_old_1_1_number_field" kindref="compound">NumberField</ref><sp/>numberField<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_old_1_1_number_field" kindref="compound">NumberField</ref>(3);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(numberField.<ref refid="class_old_1_1_number_field_1aa681a9690f56a117261259340c212084" kindref="member">possibleNumbers</ref>()).containsOnly(3);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>void<sp/>coreTest(){</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Core<sp/>core<sp/>=<sp/>new<sp/>Core();</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collection&lt;Field&gt;<sp/>numberFields<sp/>=<sp/>core.get_sudokuMatrix();</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(numberFields).extracting(Field::possibleNumbers).containsExactly(Constants.ALL_NUMBERS);</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exceptionTest(){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_old_1_1_number_field" kindref="compound">NumberField</ref><sp/>numberField<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_old_1_1_number_field" kindref="compound">NumberField</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(()<sp/>-&gt;<sp/>numberField.<ref refid="class_old_1_1_number_field_1af1a8a8bc11f68217b3faf9d268738148" kindref="member">excludeNumber</ref>(10)).isInstanceOf(ArrayIndexOutOfBoundsException.class);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>numberGroupTest(){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref><sp/>core<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>numberGroupRow<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(numberGroupRow).isNotNull();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>numberGroupColumn<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(1);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(numberGroupColumn).isNotNull();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sudokuTest(){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[][]<sp/>intMatrix=<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,0,5,3,0,8,4,0,9},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,7,0,0,0,0,0,5,0},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{9,0,4,0,0,0,6,0,7},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{5,0,0,0,4,0,0,0,2},</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,5,0,7,0,0,0},</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{6,0,0,0,3,0,0,0,8},</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{4,0,6,0,0,0,8,0,1},</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,2,0,0,0,0,0,6,0},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{8,0,1,2,0,9,7,0,4}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref><sp/>core<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref>(intMatrix);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow1<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow2<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(2);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow3<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(3);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow4<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(4);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow5<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(5);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow6<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(6);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow7<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(7);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow8<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(8);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow9<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(9);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn1<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn2<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(2);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn3<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(3);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn4<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(4);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn5<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(5);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn6<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(6);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn7<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(7);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn8<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(8);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn9<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(9);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock1<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock2<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(2);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock3<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(3);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock4<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(4);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock5<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(5);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock6<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(6);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock7<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(7);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock8<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(8);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock9<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(9);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow1.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,5,3,0,8,4,0,9);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow2.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,7,0,0,0,0,0,5,0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow3.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(9,0,4,0,0,0,6,0,7);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow4.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,0,0,4,0,0,0,2);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow5.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,5,0,7,0,0,0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow6.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(6,0,0,0,3,0,0,0,8);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow7.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,0,0,8,0,1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow8.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,2,0,0,0,0,0,6,0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow9.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,1,2,0,9,7,0,4);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn1.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,9,5,0,6,4,0,8);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn2.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,7,0,0,0,0,0,2,0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn3.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,4,0,0,0,6,0,1);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn4.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(3,0,0,0,5,0,0,0,2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn5.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,4,0,3,0,0,0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn6.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,0,0,7,0,0,0,9);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn7.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,0,0,8,0,7);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn8.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,5,0,0,0,0,0,6,0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn9.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(9,0,7,2,0,8,1,0,4);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock1.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,5,0,7,0,9,0,4);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock2.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(3,0,8,0,0,0,0,0,0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock3.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,9,0,5,0,6,0,7);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock4.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,0,0,0,0,6,0,0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock5.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,4,0,5,0,7,0,3,0);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock6.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,2,0,0,0,0,0,8);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock7.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,2,0,8,0,1);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock8.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,0,0,0,2,0,9);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock9.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,1,0,6,0,7,0,4);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>analysisTest(){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classalternative_1_1_field" kindref="compound">Field</ref>[]<sp/>array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_field" kindref="compound">Field</ref>[9];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_static_field" kindref="compound">StaticField</ref>(1,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,1));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,2));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[2]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,3));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[3]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,4));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[4]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,5));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[5]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,6));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[6]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,7));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[7]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,8));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[8]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,9));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>numberGroup<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref>(array);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberGroup.<ref refid="class_stuff_1_1_number_group_1a223fdae0a7ade75f2415f0a5cc4bedaa" kindref="member">analyse</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayList&lt;Integer&gt;<sp/>arrayList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArrayList&lt;Integer&gt;(){};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayList.add(2);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayList.add(3);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayList.add(4);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayList.add(5);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayList.add(6);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayList.add(7);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayList.add(8);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrayList.add(9);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[0].possibleNumbers()).containsOnly(1);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[1].possibleNumbers()).containsOnly(2,3,4,5,6,7,8,9);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[2].possibleNumbers()).containsOnly(2,3,4,5,6,7,8,9);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[3].possibleNumbers()).containsOnly(2,3,4,5,6,7,8,9);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[4].possibleNumbers()).containsOnly(2,3,4,5,6,7,8,9);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[5].possibleNumbers()).containsOnly(2,3,4,5,6,7,8,9);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[6].possibleNumbers()).containsOnly(2,3,4,5,6,7,8,9);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[7].possibleNumbers()).containsOnly(2,3,4,5,6,7,8,9);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(array[8].possibleNumbers()).containsOnly(2,3,4,5,6,7,8,9);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>@RepeatedTest(100)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>analyseSudokuTest(){</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[][]<sp/>intMatrix=<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,0,5,3,0,8,4,0,9},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,7,0,0,0,0,0,5,0},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{9,0,4,0,0,0,6,0,7},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{5,0,0,0,4,0,0,0,2},</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,5,0,7,0,0,0},</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{6,0,0,0,3,0,0,0,8},</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{4,0,6,0,0,0,8,0,1},</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,2,0,0,0,0,0,6,0},</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{8,0,1,2,0,9,7,0,4}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref><sp/>core<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref>(intMatrix);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow1<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(1);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow2<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(2);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow3<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(3);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow4<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(4);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow5<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(5);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow6<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(6);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow7<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(7);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow8<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(8);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testRow9<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(9);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn1<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn2<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(2);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn3<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(3);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn4<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(4);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn5<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(5);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn6<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(6);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn7<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(7);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn8<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(8);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testColumn9<sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a736b97b03e27596cd3329d1f61c5b51b" kindref="member">getColumn</ref>(9);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock1<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(1);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock2<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(2);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock3<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(3);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock4<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(4);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock5<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(5);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock6<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(6);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock7<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(7);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock8<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(8);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_number_group" kindref="compound">NumberGroup</ref><sp/>testBlock9<sp/><sp/>=<sp/>core.<ref refid="class_stuff_1_1_core_1a6824007f2d83f696e4ab5ea2beee91a2" kindref="member">getBlock</ref>(9);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow1.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,5,3,0,8,4,0,9);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow2.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,7,0,0,0,0,0,5,0);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow3.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(9,0,4,0,0,0,6,0,7);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow4.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,0,0,4,0,0,0,2);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow5.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,5,0,7,0,0,0);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow6.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(6,0,0,0,3,0,0,0,8);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow7.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,0,0,8,0,1);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow8.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,2,0,0,0,0,0,6,0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow9.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,1,2,0,9,7,0,4);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn1.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,9,5,0,6,4,0,8);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn2.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,7,0,0,0,0,0,2,0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn3.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,4,0,0,0,6,0,1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn4.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(3,0,0,0,5,0,0,0,2);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn5.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,4,0,3,0,0,0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn6.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,0,0,7,0,0,0,9);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn7.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,0,0,8,0,7);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn8.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,5,0,0,0,0,0,6,0);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn9.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(9,0,7,2,0,8,1,0,4);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock1.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(2,0,5,0,7,0,9,0,4);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock2.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(3,0,8,0,0,0,0,0,0);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock3.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,9,0,5,0,6,0,7);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock4.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(5,0,0,0,0,0,6,0,0);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock5.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,4,0,5,0,7,0,3,0);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock6.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,2,0,0,0,0,0,8);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock7.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,0,6,0,2,0,8,0,1);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock8.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(0,0,0,0,0,0,2,0,9);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock9.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(8,0,1,0,6,0,7,0,4);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core.<ref refid="class_stuff_1_1_core_1a476917194b076af223d9cdc99a7cb7ed" kindref="member">kickStartEventTrigger</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(1).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(2).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(3).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(4).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(5).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(6).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(7).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(8).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(9).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow1.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(2,<sp/>6,<sp/>5,<sp/>3,<sp/>7,<sp/>8,<sp/>4,<sp/>1,<sp/>9);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow2.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(1,<sp/>7,<sp/>8,<sp/>4,<sp/>9,<sp/>6,<sp/>2,<sp/>5,<sp/>3);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow3.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(9,<sp/>3,<sp/>4,<sp/>1,<sp/>2,<sp/>5,<sp/>6,<sp/>8,<sp/>7);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow4.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(5,<sp/>8,<sp/>9,<sp/>6,<sp/>4,<sp/>1,<sp/>3,<sp/>7,<sp/>2);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow5.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(3,<sp/>4,<sp/>2,<sp/>5,<sp/>8,<sp/>7,<sp/>1,<sp/>9,<sp/>6);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow6.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(6,<sp/>1,<sp/>7,<sp/>9,<sp/>3,<sp/>2,<sp/>5,<sp/>4,<sp/>8);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow7.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(4,<sp/>9,<sp/>6,<sp/>7,<sp/>5,<sp/>3,<sp/>8,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow8.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(7,<sp/>2,<sp/>3,<sp/>8,<sp/>1,<sp/>4,<sp/>9,<sp/>6,<sp/>5);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow9.<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>()).containsExactly(8,<sp/>5,<sp/>1,<sp/>2,<sp/>6,<sp/>9,<sp/>7,<sp/>3,<sp/>4);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>void<sp/>analyseSudokuTestParallel(){</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int[][]<sp/>intMatrix=<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,0,5,3,0,8,4,0,9},</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,7,0,0,0,0,0,5,0},</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{9,0,4,0,0,0,6,0,7},</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{5,0,0,0,4,0,0,0,2},</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,5,0,7,0,0,0},</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{6,0,0,0,3,0,0,0,8},</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{4,0,6,0,0,0,8,0,1},</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,2,0,0,0,0,0,6,0},</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{8,0,1,2,0,9,7,0,4}</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Core<sp/>core<sp/>=<sp/>new<sp/>Core(intMatrix);</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow1<sp/>=<sp/>core.getRow(1);</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow2<sp/>=<sp/>core.getRow(2);</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow3<sp/>=<sp/>core.getRow(3);</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow4<sp/>=<sp/>core.getRow(4);</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow5<sp/>=<sp/>core.getRow(5);</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow6<sp/>=<sp/>core.getRow(6);</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow7<sp/>=<sp/>core.getRow(7);</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow8<sp/>=<sp/>core.getRow(8);</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testRow9<sp/>=<sp/>core.getRow(9);</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn1<sp/>=<sp/>core.getColumn(1);</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn2<sp/>=<sp/>core.getColumn(2);</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn3<sp/>=<sp/>core.getColumn(3);</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn4<sp/>=<sp/>core.getColumn(4);</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn5<sp/>=<sp/>core.getColumn(5);</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn6<sp/>=<sp/>core.getColumn(6);</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn7<sp/>=<sp/>core.getColumn(7);</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn8<sp/>=<sp/>core.getColumn(8);</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testColumn9<sp/>=<sp/>core.getColumn(9);</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock1<sp/><sp/>=<sp/>core.getBlock(1);</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock2<sp/><sp/>=<sp/>core.getBlock(2);</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock3<sp/><sp/>=<sp/>core.getBlock(3);</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock4<sp/><sp/>=<sp/>core.getBlock(4);</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock5<sp/><sp/>=<sp/>core.getBlock(5);</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock6<sp/><sp/>=<sp/>core.getBlock(6);</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock7<sp/><sp/>=<sp/>core.getBlock(7);</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock8<sp/><sp/>=<sp/>core.getBlock(8);</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>testBlock9<sp/><sp/>=<sp/>core.getBlock(9);</highlight></codeline>
<codeline lineno="314"><highlight class="comment"></highlight></codeline>
<codeline lineno="315"><highlight class="comment"></highlight></codeline>
<codeline lineno="316"><highlight class="comment"></highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow1.getGroupAsArray()).containsExactly(2,0,5,3,0,8,4,0,9);</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow2.getGroupAsArray()).containsExactly(0,7,0,0,0,0,0,5,0);</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow3.getGroupAsArray()).containsExactly(9,0,4,0,0,0,6,0,7);</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow4.getGroupAsArray()).containsExactly(5,0,0,0,4,0,0,0,2);</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow5.getGroupAsArray()).containsExactly(0,0,0,5,0,7,0,0,0);</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow6.getGroupAsArray()).containsExactly(6,0,0,0,3,0,0,0,8);</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow7.getGroupAsArray()).containsExactly(4,0,6,0,0,0,8,0,1);</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow8.getGroupAsArray()).containsExactly(0,2,0,0,0,0,0,6,0);</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow9.getGroupAsArray()).containsExactly(8,0,1,2,0,9,7,0,4);</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn1.getGroupAsArray()).containsExactly(2,0,9,5,0,6,4,0,8);</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn2.getGroupAsArray()).containsExactly(0,7,0,0,0,0,0,2,0);</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn3.getGroupAsArray()).containsExactly(5,0,4,0,0,0,6,0,1);</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn4.getGroupAsArray()).containsExactly(3,0,0,0,5,0,0,0,2);</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn5.getGroupAsArray()).containsExactly(0,0,0,4,0,3,0,0,0);</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn6.getGroupAsArray()).containsExactly(8,0,0,0,7,0,0,0,9);</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn7.getGroupAsArray()).containsExactly(4,0,6,0,0,0,8,0,7);</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn8.getGroupAsArray()).containsExactly(0,5,0,0,0,0,0,6,0);</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testColumn9.getGroupAsArray()).containsExactly(9,0,7,2,0,8,1,0,4);</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock1.getGroupAsArray()).containsExactly(2,0,5,0,7,0,9,0,4);</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock2.getGroupAsArray()).containsExactly(3,0,8,0,0,0,0,0,0);</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock3.getGroupAsArray()).containsExactly(4,0,9,0,5,0,6,0,7);</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock4.getGroupAsArray()).containsExactly(5,0,0,0,0,0,6,0,0);</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock5.getGroupAsArray()).containsExactly(0,4,0,5,0,7,0,3,0);</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock6.getGroupAsArray()).containsExactly(0,0,2,0,0,0,0,0,8);</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock7.getGroupAsArray()).containsExactly(4,0,6,0,2,0,8,0,1);</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock8.getGroupAsArray()).containsExactly(0,0,0,0,0,0,2,0,9);</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testBlock9.getGroupAsArray()).containsExactly(8,0,1,0,6,0,7,0,4);</highlight></codeline>
<codeline lineno="344"><highlight class="comment"></highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core.parallelStart();</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(1).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;+</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(2).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;+</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(3).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;+</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(4).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;+</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(5).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;+</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(6).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;+</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(7).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;+</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(8).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;+</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.getRow(9).getGroupAsArray())<sp/>+<sp/>&quot;\n&quot;);</highlight></codeline>
<codeline lineno="356"><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow1.getGroupAsArray()).containsExactly(2,<sp/>6,<sp/>5,<sp/>3,<sp/>7,<sp/>8,<sp/>4,<sp/>1,<sp/>9);</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow2.getGroupAsArray()).containsExactly(1,<sp/>7,<sp/>8,<sp/>4,<sp/>9,<sp/>6,<sp/>2,<sp/>5,<sp/>3);</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow3.getGroupAsArray()).containsExactly(9,<sp/>3,<sp/>4,<sp/>1,<sp/>2,<sp/>5,<sp/>6,<sp/>8,<sp/>7);</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow4.getGroupAsArray()).containsExactly(5,<sp/>8,<sp/>9,<sp/>6,<sp/>4,<sp/>1,<sp/>3,<sp/>7,<sp/>2);</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow5.getGroupAsArray()).containsExactly(3,<sp/>4,<sp/>2,<sp/>5,<sp/>8,<sp/>7,<sp/>1,<sp/>9,<sp/>6);</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow6.getGroupAsArray()).containsExactly(6,<sp/>1,<sp/>7,<sp/>9,<sp/>3,<sp/>2,<sp/>5,<sp/>4,<sp/>8);</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow7.getGroupAsArray()).containsExactly(4,<sp/>9,<sp/>6,<sp/>7,<sp/>5,<sp/>3,<sp/>8,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow8.getGroupAsArray()).containsExactly(7,<sp/>2,<sp/>3,<sp/>8,<sp/>1,<sp/>4,<sp/>9,<sp/>6,<sp/>5);</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(testRow9.getGroupAsArray()).containsExactly(8,<sp/>5,<sp/>1,<sp/>2,<sp/>6,<sp/>9,<sp/>7,<sp/>3,<sp/>4);</highlight></codeline>
<codeline lineno="366"><highlight class="comment"></highlight></codeline>
<codeline lineno="367"><highlight class="comment"></highlight></codeline>
<codeline lineno="368"><highlight class="comment"></highlight></codeline>
<codeline lineno="369"><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment"></highlight></codeline>
<codeline lineno="371"><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment"></highlight></codeline>
<codeline lineno="373"><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="comment"></highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/>/*<sp/>void<sp/>coherenceTest(){</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>numberGroup<sp/>=<sp/>new<sp/>NumberGroup(new<sp/>int[]{1,<sp/>1,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9});</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(Arrays.toString(numberGroup.getGroupAsArray()));</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(numberGroup::searchForDoubleSetNumbers).isInstanceOf(DoubleNumberExeption.class);</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(numberGroup::testCoherence).isInstanceOf(DoubleNumberExeption.class);</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>numberGroup1<sp/>=<sp/>new<sp/>NumberGroup(new<sp/>int[]{1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9});</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatCode(numberGroup1::searchForDoubleSetNumbers).doesNotThrowAnyException();</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatCode(numberGroup1::testIfAllNumbersArePossible).doesNotThrowAnyException();</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatCode(numberGroup1::testCoherence).doesNotThrowAnyException();</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumberGroup<sp/>numberGroup2<sp/>=<sp/>new<sp/>NumberGroup(new<sp/>int[]{1,<sp/>0,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>9});</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberGroup2.get_numberFields()[1].exclude(2);</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatCode(numberGroup2::searchForDoubleSetNumbers).doesNotThrowAnyException();</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(numberGroup2::testIfAllNumbersArePossible).isInstanceOf(NotAllNumbersArePossibleExeption.class);</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatThrownBy(numberGroup2::testCoherence).isInstanceOf(NotAllNumbersArePossibleExeption.class);</highlight></codeline>
<codeline lineno="391"><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>@RepeatedTest(100)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createSudokuTest(){</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref><sp/>core<sp/>=<sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref>.<ref refid="class_stuff_1_1_core_1a17cfe7db1e3854f67dfa7776561eded6" kindref="member">randomCreate</ref>();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(1).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(2).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(3).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(4).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(5).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(6).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(7).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(8).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(core.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(9).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatCode(core::testCoherence).doesNotThrowAnyException();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CopyTest(){</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classalternative_1_1_field" kindref="compound">Field</ref><sp/>field<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(5,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,1));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classalternative_1_1_field" kindref="compound">Field</ref><sp/>field1<sp/>=<sp/>field.<ref refid="classalternative_1_1_field_1a98d9aacc846f615a044718ac04679a6a" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(field.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>()).isEqualTo(field1.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>());</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(field.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>());</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classalternative_1_1_field" kindref="compound">Field</ref><sp/>field2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_static_field" kindref="compound">StaticField</ref>(5,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,1));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classalternative_1_1_field" kindref="compound">Field</ref><sp/>field3<sp/>=<sp/>field2.<ref refid="classalternative_1_1_field_1a98d9aacc846f615a044718ac04679a6a" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(field2.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>()).isEqualTo(field3.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(field2.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HashSet&lt;Integer&gt;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashSet();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">.add(5);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classalternative_1_1_field" kindref="compound">Field</ref><sp/>field4<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_empty_field" kindref="compound">EmptyField</ref>(</highlight><highlight class="keyword">set</highlight><highlight class="normal">,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classalternative_1_1_coordinate" kindref="compound">Coordinate</ref>(1,1));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classalternative_1_1_field" kindref="compound">Field</ref><sp/>field5<sp/>=<sp/>field4.<ref refid="classalternative_1_1_field_1a98d9aacc846f615a044718ac04679a6a" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(field4.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>()).isEqualTo(field5.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(field4.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field5.<ref refid="classalternative_1_1_field_1ab40e6c931aa1d79b89a5de3f0b7dbc61" kindref="member">possibleNumbers</ref>());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(field5).isInstanceOf(<ref refid="classalternative_1_1_static_field" kindref="compound">StaticField</ref>.class);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>@RepeatedTest(100)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hardSudokuTest(){</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[][]<sp/>intMatrix=<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,3,0,7,4,0,0},</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,5,0,0,0,0,0,0,0},</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1,0,0,0,0,0,0,0,0},</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,3,0,0,0,7,0,0},</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,0,2,6,0,0,0},</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,0,5,0,0,0,0},</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{5,1,0,0,0,0,0,2,0},</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{6,0,0,4,0,0,0,0,0},</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,0,0,0,0,0,8}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref><sp/>core<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref>(intMatrix);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core.<ref refid="class_stuff_1_1_core_1a476917194b076af223d9cdc99a7cb7ed" kindref="member">kickStartEventTrigger</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref><sp/>finishedCore<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finishedCore<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stuff_1_1_speculative_solving_sequential" kindref="compound">SpeculativeSolvingSequential</ref>().<ref refid="class_stuff_1_1_speculative_solving_sequential_1a16b20e1e27fa6128145289c9a74c20d6" kindref="member">completeSolving</ref>(core);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="class_stuff_1_1_core_not_coherent_exeption" kindref="compound">CoreNotCoherentExeption</ref><sp/>exeption)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exeption.printStackTrace();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(1).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(2).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(3).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(4).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(5).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(6).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(7).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(8).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.<ref refid="class_stuff_1_1_core_1abc73cd6eb6a190d194b074b922db5ff0" kindref="member">getRow</ref>(9).<ref refid="class_stuff_1_1_number_group_1a2f0da0323b2ca2fffca5e7fbd12480f5" kindref="member">getGroupAsArray</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(finishedCore.<ref refid="class_stuff_1_1_core_1a1a3dc6ec35fe2f4234dfe0a3bc4e7523" kindref="member">isSolvedCompleatly</ref>()).isTrue();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatCode(finishedCore::testCoherence).doesNotThrowAnyException();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>@Test</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hardSudokuDeepAnalysis(){</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[][]<sp/>intMatrix=<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,3,0,7,4,0,0},</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,5,0,0,0,0,0,0,0},</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1,0,0,0,0,0,0,0,0},</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,3,0,0,0,7,0,0},</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,0,2,6,0,0,0},</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,0,5,0,0,0,0},</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{5,1,0,0,0,0,0,2,0},</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{6,0,0,4,0,0,0,0,0},</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,0,0,0,0,0,0,0,8}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref><sp/>core<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stuff_1_1_core" kindref="compound">Core</ref>(intMatrix);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core.<ref refid="class_stuff_1_1_core_1a476917194b076af223d9cdc99a7cb7ed" kindref="member">kickStartEventTrigger</ref>();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collection&lt;Core&gt;<sp/>allCores<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allCores<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_stuff_1_1_speculative_solving_sequential" kindref="compound">SpeculativeSolvingSequential</ref>().<ref refid="class_stuff_1_1_speculative_solving_sequential_1aeee8ee85b82b288d35180e27a8432495" kindref="member">completeAnalysis</ref>(core);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="class_stuff_1_1_core_not_coherent_exeption" kindref="compound">CoreNotCoherentExeption</ref><sp/>exeption)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exeption.printStackTrace();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allCores.forEach(finishedCore<sp/>-&gt;<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.out.println(</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(1).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(2).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(3).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(4).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(5).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(6).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(7).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(8).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arrays.toString(finishedCore.getRow(9).getGroupAsArray())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThat(finishedCore.isSolvedCompleatly()).isTrue();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assertThatCode(finishedCore::testCoherence).doesNotThrowAnyException();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/test/java/SudokuTest.java"/>
  </compounddef>
</doxygen>
